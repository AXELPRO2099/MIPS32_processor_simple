$date
   Fri Aug  2 23:40:50 2024
$end

$version
  2024.1
  $dumpfile ("mips.vcd") 
$end

$timescale
  1ps
$end

$scope module test_mips32 $end
$var reg 1 ! clk1 $end
$var reg 1 " clk2 $end
$var integer 32 # k [31:0] $end
$scope module mips $end
$var wire 1 $ clk1 $end
$var wire 1 % clk2 $end
$var wire 32 & out [31:0] $end
$var reg 32 ' PC [31:0] $end
$var reg 32 ( IF_ID_IR [31:0] $end
$var reg 32 ) IF_ID_NPC [31:0] $end
$var reg 32 * ID_EX_IR [31:0] $end
$var reg 32 + ID_EX_NPC [31:0] $end
$var reg 32 , ID_EX_A [31:0] $end
$var reg 32 - ID_EX_B [31:0] $end
$var reg 32 . ID_EX_Imm [31:0] $end
$var reg 32 / EX_MEM_IR [31:0] $end
$var reg 32 0 EX_MEM_NPC [31:0] $end
$var reg 32 1 EX_MEM_B [31:0] $end
$var reg 32 2 EX_MEM_ALUout [31:0] $end
$var reg 32 3 MEM_WB_IR [31:0] $end
$var reg 32 4 MEM_WB_ALUout [31:0] $end
$var reg 32 5 MEM_WB_LMD [31:0] $end
$var reg 3 6 ID_EX_type [2:0] $end
$var reg 3 7 EX_MEM_type [2:0] $end
$var reg 3 8 MEM_WB_type [2:0] $end
$var reg 1 9 EX_MEM_cond $end
$var reg 1 : HALTED $end
$var reg 1 ; TAKEN_BRANCH $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
0!
0"
b11111 #
0$
0%
bx &
b0 '
bx (
bx )
bx *
bx +
bx ,
bx -
bx .
bx /
bx 0
bx 1
bx 2
bx 3
bx 4
bx 5
bx 6
bx 7
bx 8
x9
0:
0;
$end

#10000
1!
1$

#12000
b1 '
b101000000000010000000001111000 (
b1 )

#20000
1"
1%
b0 ,

#22000
b101000000000010000000001111000 *
b1 +
b1 -
b1111000 .
b1 6

#30000
0!
0$

#40000
0"
0%

#50000
1!
1$

#52000
b10 '
b1100011000110001100000000000 (
b10 )
b101000000000010000000001111000 /
b1111000 2
b1 7

#60000
1"
1%

#62000
b1111000 &
b1100011000110001100000000000 *
b10 +
b11 ,
b11 -
b1100000000000 .
b101000000000010000000001111000 3
b1111000 4
b0 6
b1 8

#70000
0!
0$

#80000
0"
0%

#90000
1!
1$

#92000
b11 '
b100000001000100000000000000000 (
b11 )
b1100011000110001100000000000 /
b11 2
b0 7

#100000
1"
1%

#102000
b11 &
b100000001000100000000000000000 *
b11 +
b1111000 ,
b10 -
b0 .
b1100011000110001100000000000 3
b11 4
b10 6
b0 8

#110000
0!
0$

#120000
0"
0%

#130000
1!
1$

#132000
b100 '
b1100011000110001100000000000 (
b100 )
b100000001000100000000000000000 /
b10 1
b1111000 2
b10 7

#140000
1"
1%

#142000
b1100011000110001100000000000 *
b100 +
b11 ,
b11 -
b1100000000000 .
b100000001000100000000000000000 3
b1010101 5
b0 6
b10 8

#150000
0!
0$

#160000
0"
0%

#170000
1!
1$

#172000
b101 '
b101000010000100000000000101101 (
b101 )
b1100011000110001100000000000 /
b11 2
b0 7

#180000
1"
1%

#182000
b101000010000100000000000101101 *
b101 +
b1010101 ,
b1010101 -
b101101 .
b1100011000110001100000000000 3
b1 6
b0 8

#190000
0!
0$

#200000
0"
0%

#210000
1!
1$

#212000
b110 '
b1100011000110001100000000000 (
b110 )
b101000010000100000000000101101 /
b10000010 2
b1 7

#220000
1"
1%

#222000
b10000010 &
b1100011000110001100000000000 *
b110 +
b11 ,
b11 -
b1100000000000 .
b101000010000100000000000101101 3
b10000010 4
b0 6
b1 8

#230000
0!
0$

#240000
0"
0%

#250000
1!
1$

#252000
b111 '
b100100001000100000000000000001 (
b111 )
b1100011000110001100000000000 /
b11 2
b0 7

#260000
1"
1%

#262000
b11 &
b100100001000100000000000000001 *
b111 +
b1111000 ,
b10000010 -
b1 .
b1100011000110001100000000000 3
b11 4
b11 6
b0 8

#270000
0!
0$

#280000
0"
0%

#290000
1!
1$

#292000
b1000 '
b11111100000000000000000000000000 (
b1000 )
b100100001000100000000000000001 /
b10000010 1
b1111001 2
b11 7

#300000
1"
1%
b0 ,
b0 -

#302000
b11111100000000000000000000000000 *
b1000 +
b0 .
b100100001000100000000000000001 3
b101 6
b11 8

#310000
0!
0$

#320000
0"
0%

#330000
1!
1$

#332000
b1001 '
bx (
b1001 )
b11111100000000000000000000000000 /
b101 7

#340000
1"
1%

#342000
bx *
b1001 +
bx ,
bx -
bx .
b11111100000000000000000000000000 3
b101 8

#350000
0!
0$

#360000
0"
0%

#370000
1!
1$

#372000
b1010 '
b1010 )
bx /
1:

#380000
1"
1%

#390000
0!
0$

#400000
0"
0%
